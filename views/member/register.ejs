<% include ../head.ejs %>


<section id="sign-in" class="services section-bg">
    <div class="container">
        <div class="box">
            <form class="form-signin" action="/member/register" onsubmit="return onSubmit(this);" method="POST">
                <h2 class="form-signin-heading">SIGN UP</h2>
                <div class="form-group">
                    <input type="email" id="username" name="username" class="form-control" placeholder="example@email.com" required autofocus>
                </div>
                <div class="form-group mt-2">
                    <input type="password" id="password" name="password" class="form-control" placeholder="비밀번호" required>
                    <input type="password" id="password_confirm" name="password_confirm" class="form-control mt-1" placeholder="비밀번호 확인" required>
                </div>
                <div class="form-group mt-3">
                    <input type="text" id="name" name="name" class="form-control" placeholder="이름" required>
                </div>
                <div class="form-group mt-2">
                    <input type="text" id="phone" name="phone" class="form-control" placeholder="전화번호" required>
                </div>
                <div class="form-group mt-2">
                    <div class="input-group">
                        <input type="text" id="addrRoad" name="addrRoad" class="form-control" placeholder="도로명주소" onclick="execDaumPostcode()" readonly>
                        <input type="button" id="addrSearch" class="btn btn-sm btn-primary btn-block" onclick="execDaumPostcode()" value="주소검색">
                    </div>
                    <input type="text" id="addrDetail" name="addrDetail" class="form-control mt-1" placeholder="상세주소">
                </div>
                <div id="alert" class="form-group mt-2"></div>
                <button class="btn btn-lg btn-primary btn-block mt-2" type="submit">Sign up</button>
            </form>
        </div>
        <div id="layer" style="display:none;position:fixed;overflow:hidden;z-index:1;-webkit-overflow-scrolling:touch;">
            <img src="//t1.daumcdn.net/postcode/resource/images/close.png" id="btnCloseLayer" style="cursor:pointer;position:absolute;right:-3px;top:-3px;z-index:1" onclick="closeDaumPostcode()" alt="닫기 버튼">
        </div>
    </div>
</section>

<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script>
    function onSubmit(f) {
        if(f.password.value != f.password_confirm.value) {
            alertMsg('비밀번호가 일치하지 않습니다.');
            f.password_confirm.value = '';
            f.password_confirm.focus();
            return false;
        }
        if(!f.addrRoad.value) {
            alertMsg('주소가 입력되지 않았습니다.');
            f.addrSearch.focus();
            return false;
        }
        return true;
    }
    function alertMsg(msg) {
        document.getElementById('alert').innerHTML = '* ' + msg;
    }
    function execDaumPostcode() {
        new daum.Postcode({
            oncomplete: function(data) {
            // 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

            // 각 주소의 노출 규칙에 따라 주소를 조합한다.
            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
            var fullAddr = data.address; // 최종 주소 변수
            var extraAddr = ''; // 조합형 주소 변수

            // 기본 주소가 도로명 타입일때 조합한다.
            if(data.addressType === 'R'){
                //법정동명이 있을 경우 추가한다.
                if(data.bname !== ''){
                    extraAddr += data.bname;
                }
                // 건물명이 있을 경우 추가한다.
                if(data.buildingName !== ''){
                    extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                }
                // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
                fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
            }
            
            var fullRoadAddr = data.roadAddress; // 도로명 주소 변수
            var extraRoadAddr = ''; // 도로명 조합형 주소 변수

            // 법정동명이 있을 경우 추가한다. (법정리는 제외)
            // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                extraRoadAddr += data.bname;
            }

            // 건물명이 있고, 공동주택일 경우 추가한다.
            if(data.buildingName !== '' && data.apartment === 'Y'){
               extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);
            }

            // 도로명, 지번 조합형 주소가 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
            if(extraRoadAddr !== ''){
                extraRoadAddr = ' (' + extraRoadAddr + ')';
            }
            // 도로명, 지번 주소의 유무에 따라 해당 조합형 주소를 추가한다.
            if(fullRoadAddr !== ''){
                fullRoadAddr += extraRoadAddr;
            }				

            document.getElementById('addrRoad').value = fullRoadAddr;
            }
        }).open();
    }
</script>

<% include ../tail.ejs %>